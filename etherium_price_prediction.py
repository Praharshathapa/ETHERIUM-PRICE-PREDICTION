# -*- coding: utf-8 -*-
"""ETHERIUM_PRICE_PREDICTION.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14HHLw5iDnCwO74L6_HaH9E_50ezXON4X
"""

import pandas as pd
import yfinance as yf
from datetime import datetime, timedelta
from prophet import Prophet
import plotly.graph_objects as go
import warnings

# Suppress warnings
warnings.filterwarnings('ignore')
# pd.options.display.float_format = '${:,.2f}'.format

# Get today's date
today = datetime.today().strftime('%Y-%m-%d')

# Define the start date for historical data
start_date = '2016-01-01'

# Download Ethereum (ETH) price data using yfinance
eth_df = yf.download('ETH-USD', start_date, today)

# Reset the index to have a column 'Date'
eth_df.reset_index(inplace=True)


# Create a DataFrame with only 'Date' and 'Open' columns and rename them
df = eth_df[['Date', 'Open']]
df.rename(columns={'Date': 'ds', 'Open': 'y'}, inplace=True)

# Initialize and fit the Prophet model
m = Prophet(seasonality_mode="additive")
m.fit(df)

# Create a DataFrame for future predictions
future = m.make_future_dataframe(periods=365)

# Make predictions for the future
forecast = m.predict(future)

# Extract the prediction for the next day
next_day = (datetime.today() + timedelta(days=1)).strftime('%Y-%m-%d')
next_day_prediction = forecast[forecast['ds'] == next_day]['yhat'].item()

# Create a Plotly figure for the forecast
fig = go.Figure()

# Plot historical data
fig.add_trace(go.Scatter(x=df['ds'], y=df['y'], mode='lines', name='Historical Data'))

# Plot predicted data
fig.add_trace(go.Scatter(x=forecast['ds'], y=forecast['yhat'], mode='lines', name='Predicted Data', line=dict(dash='dot')))

# Add a title and labels
fig.update_layout(
    title='Ethereum Price Forecast with Prophet',
    xaxis_title='Date',
    yaxis_title='Price (USD)'
)

# Show the prediction for the next day
fig.add_trace(go.Scatter(x=[next_day], y=[next_day_prediction], mode='markers', name='Next Day Prediction', marker=dict(size=10, color='red')))

# Display the Plotly figure
fig.show()

